{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Button, CheckBox, Input } from '@rneui/themed';\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref6 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x4) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nexport function TodoScreen(_ref) {\n  var navigation = _ref.navigation,\n    tasks = _ref.tasks,\n    setTasks = _ref.setTasks;\n  cacheFonts([FontAwesome.font]);\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    input = _useState2[0],\n    setInput = _useState2[1];\n  var updateTask = function () {\n    var _ref2 = _asyncToGenerator(function* (task) {\n      console.log(task);\n      task.completed = !task.completed;\n      setTasks(_toConsumableArray(tasks));\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(tasks));\n    });\n    return function updateTask(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var addTask = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var maxKey = 0;\n      tasks.forEach(function (task) {\n        if (task.key > maxKey) {\n          maxKey = task.key;\n        }\n      });\n      var newTasks = [].concat(_toConsumableArray(tasks), [{\n        description: input,\n        completed: false,\n        key: maxKey + 1\n      }]);\n      setTasks(newTasks);\n      console.log(newTasks);\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(newTasks));\n      setInput(\"\");\n    });\n    return function addTask() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var removeTask = function () {\n    var _ref4 = _asyncToGenerator(function* (tasktoRemove) {\n      var newTasks = tasks.filter(function (task) {\n        return task.key !== tasktoRemove.key;\n      });\n      setTasks(newTasks);\n      console.log(newTasks);\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(newTasks));\n    });\n    return function removeTask(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var renderItem = function renderItem(_ref5) {\n    var item = _ref5.item;\n    return _jsxs(View, {\n      style: styles.horizontal,\n      children: [_jsx(CheckBox, {\n        textStyle: item.completed ? {\n          textDecorationLine: \"line-through\",\n          textDecorationStyle: \"solid\"\n        } : undefined,\n        title: item.description,\n        checked: item.completed,\n        onPress: function onPress() {\n          return updateTask(item);\n        }\n      }), _jsx(Button, {\n        title: \"Details\",\n        onPress: function onPress() {\n          navigation.navigate(\"Details\", {\n            item: item\n          });\n          navigation.setParams({\n            setTasks: setTasks\n          });\n        }\n      }), _jsx(Button, {\n        title: \"Remove?\",\n        onPress: function onPress() {\n          return removeTask(item);\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(FlatList, {\n      data: tasks,\n      renderItem: renderItem\n    }), _jsxs(View, {\n      style: [styles.horizontal],\n      children: [_jsx(Input, {\n        onChangeText: setInput,\n        value: input,\n        placeholder: \"New task...\"\n      }), _jsx(Button, {\n        title: \"Add task\",\n        onPress: addTask\n      })]\n    })]\n  });\n}\nexport default TodoScreen;\nexport { StyleSheet };","map":{"version":3,"names":["AsyncStorage","Button","CheckBox","Input","StatusBar","StyleSheet","View","FlatList","FontAwesome","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref6","font","Font","loadAsync","_x4","TodoScreen","_ref","navigation","tasks","setTasks","_useState","useState","_useState2","_slicedToArray","input","setInput","updateTask","_ref2","task","console","log","completed","_toConsumableArray","setItem","JSON","stringify","_x2","addTask","_ref3","maxKey","forEach","key","newTasks","concat","description","removeTask","_ref4","tasktoRemove","filter","_x3","renderItem","_ref5","item","style","styles","horizontal","children","textStyle","textDecorationLine","textDecorationStyle","undefined","title","checked","onPress","navigate","setParams","container","data","onChangeText","value","placeholder"],"sources":["/Users/katverret/Documents/todoList/src/screens/ToDoScreen.js"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\"\nimport { Button, CheckBox, Input } from '@rneui/themed'\nimport { StatusBar } from \"expo-status-bar\"\nimport { StyleSheet, View, FlatList } from 'react-native'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\n\nasync function cacheFonts(fonts) {\n    return fonts.map(async (font) => await Font.loadAsync(font))\n  }\n  \nexport function TodoScreen({ navigation, tasks, setTasks }) {\n    cacheFonts([FontAwesome.font])\n    let [input, setInput] = useState(\"\")\n    let updateTask = async (task) => {\n      console.log(task)\n      task.completed = !task.completed\n      setTasks([...tasks])\n      await AsyncStorage.setItem('@tasks', JSON.stringify(tasks))\n    }\n    let addTask = async () => {\n      let maxKey = 0\n      tasks.forEach(task => {\n        if (task.key > maxKey) {\n          maxKey = task.key\n        }\n      })\n  \n      let newTasks = [\n        ...tasks,\n        {\n          description: input,\n          completed: false,\n          key: maxKey + 1,\n        },\n      ]\n  \n      setTasks(newTasks)\n      console.log(newTasks)\n      await AsyncStorage.setItem('@tasks', JSON.stringify(newTasks))\n      setInput(\"\")\n    }\n  \n    // new added component: removeTask\n    // working on adding confirmation alert \n    let removeTask = async (tasktoRemove) => {\n      let newTasks = tasks.filter(task => task.key !== tasktoRemove.key)\n      setTasks(newTasks)\n      console.log(newTasks)\n      await AsyncStorage.setItem('@tasks', JSON.stringify(newTasks))\n    }\n  \n    let renderItem = ({ item }) => {\n      return (\n        <View style={styles.horizontal}>\n          <CheckBox\n            textStyle={item.completed ? {\n              textDecorationLine: \"line-through\",\n              textDecorationStyle: \"solid\",\n            } : undefined}\n            title={item.description}\n            checked={item.completed}\n            onPress={() => updateTask(item)}\n          />\n          <Button title=\"Details\" onPress={() => {\n            navigation.navigate(\"Details\", { item });\n            navigation.setParams({ setTasks: setTasks });\n          }} />\n          <Button title=\"Remove?\" onPress={() => removeTask(item)} />\n        </View>\n      )\n    }\n    \n    return (\n      <View style={[styles.container]}>\n        <StatusBar style=\"auto\" />\n        <FlatList data={tasks} renderItem={renderItem} />\n        <View style={[styles.horizontal]}>\n          <Input\n            onChangeText={setInput}\n            value={input}\n            placeholder=\"New task...\">\n          </Input>\n          <Button title=\"Add task\" onPress={addTask} />\n        </View>\n      </View>\n    )\n  }\n\n  export default TodoScreen\n  export { StyleSheet };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}