{"ast":null,"code":"import { StackActions } from \"@react-navigation/native\";\nimport { Text } from \"@rneui/themed\";\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DetailsScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route,\n    setTasks = _ref.setTasks,\n    tasks = _ref.tasks;\n  console.log(route.params.item.relatedTasks);\n  var _route$params$item = route.params.item,\n    description = _route$params$item.description,\n    relatedTasks = _route$params$item.relatedTasks;\n  useEffect(function () {\n    navigation.setOptions({\n      title: description === \"\" ? \"No title\" : description\n    });\n  }, [navigation]);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Text, {\n      children: \"Details Screen\"\n    }), _jsx(Text, {\n      children: description\n    }), relatedTasks !== undefined && relatedTasks.length > 0 ? _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Related Tasks:\"\n      }), tasks.filter(function (task) {\n        return relatedTasks.includes(task.key);\n      }).map(function (cTask) {\n        return _jsx(Button, {\n          title: cTask.description,\n          onPress: function onPress() {\n            navigation.dispatch(StackActions.push('Details', {\n              item: cTask,\n              setTasks: setTasks,\n              tasks: tasks,\n              relatedTasks: cTask.relatedTasks\n            }));\n          }\n        }, cTask.key);\n      })]\n    }) : undefined]\n  });\n}\nexport default DetailsScreen;","map":{"version":3,"names":["StackActions","Text","React","useEffect","View","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","DetailsScreen","_ref","navigation","route","setTasks","tasks","console","log","params","item","relatedTasks","_route$params$item","description","setOptions","title","style","flex","alignItems","justifyContent","children","undefined","length","filter","task","includes","key","map","cTask","Button","onPress","dispatch","push"],"sources":["/Users/katverret/Documents/todoList/src/screens/DetailsScreen.js"],"sourcesContent":["import { StackActions } from \"@react-navigation/native\";\nimport { Text } from \"@rneui/themed\";\nimport React, { useEffect } from \"react\";\nimport { View } from \"react-native\";\n\n\nfunction DetailsScreen({ navigation, route, setTasks, tasks }) {\n    console.log(route.params.item.relatedTasks);\n    let { description, relatedTasks } = route.params.item\n    useEffect(() => {\n      navigation.setOptions({\n        title: description === \"\" ? \"No title\" : description,\n      })\n    }, [navigation])\n  \n    return (\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <Text>Details Screen</Text>\n        <Text>{description}</Text>\n        {\n          relatedTasks !== undefined && relatedTasks.length > 0 ?\n            <>\n              <Text>Related Tasks:</Text>\n              {tasks.filter(task => relatedTasks.includes(task.key))\n                .map(cTask => <Button key={cTask.key} title={cTask.description}\n                  onPress={() => {\n                    navigation.dispatch(StackActions.push('Details', { item: cTask, setTasks, tasks, relatedTasks: cTask.relatedTasks }));\n                  }}\n                />)\n              }\n            </>\n            : undefined}\n      </View>\n    )\n  }\n  \n  export default DetailsScreen;"],"mappings":"AAAA,SAASA,YAAY,QAAQ,0BAA0B;AACvD,SAASC,IAAI,QAAQ,eAAe;AACpC,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAIzC,SAASC,aAAaA,CAAAC,IAAA,EAAyC;EAAA,IAAtCC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;IAAEC,KAAK,GAAAJ,IAAA,CAALI,KAAK;EACvDC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACK,MAAM,CAACC,IAAI,CAACC,YAAY,CAAC;EAC3C,IAAAC,kBAAA,GAAoCR,KAAK,CAACK,MAAM,CAACC,IAAI;IAA/CG,WAAW,GAAAD,kBAAA,CAAXC,WAAW;IAAEF,YAAY,GAAAC,kBAAA,CAAZD,YAAY;EAC/BlB,SAAS,CAAC,YAAM;IACdU,UAAU,CAACW,UAAU,CAAC;MACpBC,KAAK,EAAEF,WAAW,KAAK,EAAE,GAAG,UAAU,GAAGA;IAC3C,CAAC,CAAC;EACJ,CAAC,EAAE,CAACV,UAAU,CAAC,CAAC;EAEhB,OACEH,KAAA,CAACN,IAAI;IAACsB,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GACvExB,IAAA,CAACL,IAAI;MAAA6B,QAAA,EAAC;IAAc,EAAO,EAC3BxB,IAAA,CAACL,IAAI;MAAA6B,QAAA,EAAEP;IAAW,EAAQ,EAExBF,YAAY,KAAKU,SAAS,IAAIV,YAAY,CAACW,MAAM,GAAG,CAAC,GACnDtB,KAAA,CAAAF,SAAA;MAAAsB,QAAA,GACExB,IAAA,CAACL,IAAI;QAAA6B,QAAA,EAAC;MAAc,EAAO,EAC1Bd,KAAK,CAACiB,MAAM,CAAC,UAAAC,IAAI;QAAA,OAAIb,YAAY,CAACc,QAAQ,CAACD,IAAI,CAACE,GAAG,CAAC;MAAA,EAAC,CACnDC,GAAG,CAAC,UAAAC,KAAK;QAAA,OAAIhC,IAAA,CAACiC,MAAM;UAAiBd,KAAK,EAAEa,KAAK,CAACf,WAAY;UAC7DiB,OAAO,EAAE,SAAAA,QAAA,EAAM;YACb3B,UAAU,CAAC4B,QAAQ,CAACzC,YAAY,CAAC0C,IAAI,CAAC,SAAS,EAAE;cAAEtB,IAAI,EAAEkB,KAAK;cAAEvB,QAAQ,EAARA,QAAQ;cAAEC,KAAK,EAALA,KAAK;cAAEK,YAAY,EAAEiB,KAAK,CAACjB;YAAa,CAAC,CAAC,CAAC;UACvH;QAAE,GAHuBiB,KAAK,CAACF,GAAG,CAIlC;MAAA,EAAC;IAAA,EAEJ,GACDL,SAAS;EAAA,EACV;AAEX;AAEA,eAAepB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}