{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Button, Input } from \"react-native-elements\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EditTask = function EditTask(_ref) {\n  var editItem = _ref.editItem,\n    setEditItem = _ref.setEditItem,\n    isVisible = _ref.isVisible;\n  var _useState = useState((editItem == null ? void 0 : editItem.description) || ''),\n    _useState2 = _slicedToArray(_useState, 2),\n    description = _useState2[0],\n    setDescription = _useState2[1];\n  var editTask = function editTask() {\n    editItem.description = description;\n    setEditItem(editItem);\n    setDescription('');\n  };\n  return _jsxs(Modal, {\n    visible: isVisible,\n    animationType: \"slide\",\n    children: [_jsx(Input, {\n      value: description,\n      onChangeText: function onChangeText(text) {\n        return setDescription(text);\n      },\n      placeholder: \"Edit task description\",\n      autoFocus: true\n    }), _jsx(Button, {\n      title: \"Save\",\n      onPress: editTask\n    }), _jsx(Button, {\n      title: \"Cancel\",\n      onPress: function onPress() {\n        return setEditItem(null);\n      }\n    })]\n  });\n};\nexport default EditTask;","map":{"version":3,"names":["useState","Modal","Button","Input","jsx","_jsx","jsxs","_jsxs","EditTask","_ref","editItem","setEditItem","isVisible","_useState","description","_useState2","_slicedToArray","setDescription","editTask","visible","animationType","children","value","onChangeText","text","placeholder","autoFocus","title","onPress"],"sources":["/Users/katverret/Documents/todoList/src/components/EditTask.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Modal } from \"react-native\";\nimport { Button, Input } from \"react-native-elements\";\n\nconst EditTask = ({ editItem, setEditItem, isVisible }) => {\n  const [description, setDescription] = useState(editItem?.description || '');\n\n  const editTask = () => {\n    // update task description\n    editItem.description = description;\n    setEditItem(editItem);\n    setDescription('');\n  };\n\n  return (\n    <Modal visible={isVisible} animationType=\"slide\">\n      <Input\n        value={description}\n        onChangeText={(text) => setDescription(text)}\n        placeholder=\"Edit task description\"\n        autoFocus\n      />\n      <Button title=\"Save\" onPress={editTask} />\n      <Button title=\"Cancel\" onPress={() => setEditItem(null)} />\n    </Modal>\n  );\n};\n\nexport default EditTask;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,OAAAC,KAAA;AAEjC,SAASC,MAAM,EAAEC,KAAK,QAAQ,uBAAuB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtD,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAA6C;EAAA,IAAvCC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,WAAW,GAAAF,IAAA,CAAXE,WAAW;IAAEC,SAAS,GAAAH,IAAA,CAATG,SAAS;EAClD,IAAAC,SAAA,GAAsCb,QAAQ,CAAC,CAAAU,QAAQ,oBAARA,QAAQ,CAAEI,WAAW,KAAI,EAAE,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAApEC,WAAW,GAAAC,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAElC,IAAMG,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IAErBR,QAAQ,CAACI,WAAW,GAAGA,WAAW;IAClCH,WAAW,CAACD,QAAQ,CAAC;IACrBO,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,OACEV,KAAA,CAACN,KAAK;IAACkB,OAAO,EAAEP,SAAU;IAACQ,aAAa,EAAC,OAAO;IAAAC,QAAA,GAC9ChB,IAAA,CAACF,KAAK;MACJmB,KAAK,EAAER,WAAY;MACnBS,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKP,cAAc,CAACO,IAAI,CAAC;MAAA,CAAC;MAC7CC,WAAW,EAAC,uBAAuB;MACnCC,SAAS;IAAA,EACT,EACFrB,IAAA,CAACH,MAAM;MAACyB,KAAK,EAAC,MAAM;MAACC,OAAO,EAAEV;IAAS,EAAG,EAC1Cb,IAAA,CAACH,MAAM;MAACyB,KAAK,EAAC,QAAQ;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMjB,WAAW,CAAC,IAAI,CAAC;MAAA;IAAC,EAAG;EAAA,EACrD;AAEZ,CAAC;AAED,eAAeH,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}