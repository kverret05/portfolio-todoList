{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { StackActions } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref7 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x4) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar initTasks = [{\n  description: \"Do homework\",\n  completed: false,\n  key: 1,\n  relatedTasks: [2]\n}, {\n  description: \"Play video games\",\n  completed: false,\n  key: 2\n}];\nvar Stack = createNativeStackNavigator();\nfunction ToDoHomeScreen() {\n  var _useState = useState(initTasks),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  useEffect(function () {\n    function getValue() {\n      return _getValue.apply(this, arguments);\n    }\n    function _getValue() {\n      _getValue = _asyncToGenerator(function* () {\n        var value = yield AsyncStorage.getItem(\"@tasks\");\n        if (value === null) {\n          console.log(\"Sorting serialized version of tasks\" + JSON.stringify(tasks));\n          yield AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks));\n        } else {\n          var parsedValue = JSON.parse(value);\n          console.log(\"Retrieving serialized version of tasks\");\n          console.log(parsedValue);\n          setTasks(JSON.parse(value));\n        }\n      });\n      return _getValue.apply(this, arguments);\n    }\n    getValue();\n  }, []);\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"To Do List\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Todo List\",\n      children: function children(props) {\n        return _jsx(TodoScreen, _objectSpread(_objectSpread({}, props), {}, {\n          tasks: tasks,\n          setTasks: setTasks\n        }));\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Details\",\n      children: function children(props) {\n        return _jsx(DetailsScreen, _objectSpread(_objectSpread({}, props), {}, {\n          setTasks: setTasks,\n          tasks: tasks\n        }));\n      }\n    })]\n  });\n}\nfunction DetailsScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route,\n    setTasks = _ref.setTasks,\n    tasks = _ref.tasks;\n  console.log(route.params.item.relatedTasks);\n  var _route$params$item = route.params.item,\n    description = _route$params$item.description,\n    relatedTasks = _route$params$item.relatedTasks;\n  useEffect(function () {\n    navigation.setOptions({\n      title: description === \"\" ? \"No title\" : description\n    });\n  }, [navigation]);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Text, {\n      children: \"Details Screen\"\n    }), _jsx(Text, {\n      children: description\n    }), relatedTasks !== undefined && relatedTasks.length > 0 ? _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Related Tasks:\"\n      }), tasks.filter(function (task) {\n        return relatedTasks.includes(task.key);\n      }).map(function (cTask) {\n        return _jsx(Button, {\n          title: cTask.description,\n          onPress: function onPress() {\n            navigation.dispatch(StackActions.push('Details', {\n              item: cTask,\n              setTasks: setTasks,\n              tasks: tasks,\n              relatedTasks: cTask.relatedTasks\n            }));\n          }\n        }, cTask.key);\n      })]\n    }) : undefined]\n  });\n}\nfunction TodoScreen(_ref2) {\n  var navigation = _ref2.navigation,\n    tasks = _ref2.tasks,\n    setTasks = _ref2.setTasks;\n  cacheFonts([FontAwesome.font]);\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var updateTask = function () {\n    var _ref3 = _asyncToGenerator(function* (task) {\n      console.log(task);\n      task.completed = !task.completed;\n      setTasks(_toConsumableArray(tasks));\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(tasks));\n    });\n    return function updateTask(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var addTask = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var maxKey = 0;\n      tasks.forEach(function (task) {\n        if (task.key > maxKey) {\n          maxKey = task.key;\n        }\n      });\n      var newTasks = [].concat(_toConsumableArray(tasks), [{\n        description: input,\n        completed: false,\n        key: maxKey + 1\n      }]);\n      setTasks(newTasks);\n      console.log(newTasks);\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(newTasks));\n      setInput(\"\");\n    });\n    return function addTask() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var removeTask = function () {\n    var _ref5 = _asyncToGenerator(function* (tasktoRemove) {\n      var newTasks = tasks.filter(function (task) {\n        return task.key !== tasktoRemove.key;\n      });\n      setTasks(newTasks);\n      console.log(newTasks);\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(newTasks));\n    });\n    return function removeTask(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var renderItem = function renderItem(_ref6) {\n    var item = _ref6.item;\n    return _jsxs(View, {\n      style: styles.horizontal,\n      children: [_jsx(CheckBox, {\n        textStyle: item.completed ? {\n          textDecorationLine: \"line-through\",\n          textDecorationStyle: \"solid\"\n        } : undefined,\n        title: item.description,\n        checked: item.completed,\n        onPress: function onPress() {\n          return updateTask(item);\n        }\n      }), _jsx(Button, {\n        title: \"Details\",\n        onPress: function onPress() {\n          navigation.navigate(\"Details\", {\n            item: item\n          });\n          navigation.setParams({\n            setTasks: setTasks\n          });\n        }\n      }), _jsx(Button, {\n        title: \"Remove?\",\n        onPress: function onPress() {\n          return removeTask(item);\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(FlatList, {\n      data: tasks,\n      renderItem: renderItem\n    }), _jsxs(View, {\n      style: [styles.horizontal],\n      children: [_jsx(Input, {\n        onChangeText: setInput,\n        value: input,\n        placeholder: \"New task...\"\n      }), _jsx(Button, {\n        title: \"Add task\",\n        onPress: addTask\n      })]\n    })]\n  });\n}\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(Tab.Navigator, {\n      children: _jsx(Tab.Screen, {\n        name: \"Home\",\n        component: ToDoHomeScreen,\n        options: {\n          headerShown: false\n        }\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: '50%',\n    backgroundColor: '#0553'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 30\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","FlatList","Button","CheckBox","Input","Text","Font","FontAwesome","useEffect","useState","NavigationContainer","createNativeStackNavigator","StackActions","AsyncStorage","createBottomTabNavigator","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref7","font","loadAsync","_x4","initTasks","description","completed","key","relatedTasks","Stack","ToDoHomeScreen","_useState","_useState2","_slicedToArray","tasks","setTasks","getValue","_getValue","value","getItem","console","log","JSON","stringify","setItem","parsedValue","parse","Navigator","initialRouteName","children","Screen","name","props","TodoScreen","_objectSpread","DetailsScreen","_ref","navigation","route","params","item","_route$params$item","setOptions","title","style","flex","alignItems","justifyContent","undefined","length","filter","task","includes","cTask","onPress","dispatch","push","_ref2","_useState3","_useState4","input","setInput","updateTask","_ref3","_toConsumableArray","_x2","addTask","_ref4","maxKey","forEach","newTasks","concat","removeTask","_ref5","tasktoRemove","_x3","renderItem","_ref6","styles","horizontal","textStyle","textDecorationLine","textDecorationStyle","checked","navigate","setParams","container","data","onChangeText","placeholder","App","component","options","headerShown","create","image","aspectRatio","width","backgroundColor","flexDirection","padding","button"],"sources":["/Users/katverret/Documents/todoList/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar'\nimport { StyleSheet, View, FlatList } from 'react-native'\nimport { Button, CheckBox, Input, Text } from '@rneui/themed'\nimport * as Font from 'expo-font'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { useEffect, useState } from 'react'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\"\nimport { StackActions } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\n\nconst Tab = createBottomTabNavigator()\n\nasync function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font))\n}\n\nlet initTasks = [\n  { \n    description: \"Do homework\", \n    completed: false, \n    key: 1, \n    relatedTasks: [2]\n   },\n  { \n    description: \"Play video games\", \n    completed: false, \n    key: 2 \n  },\n];\n\nconst Stack = createNativeStackNavigator()\n\n\nfunction ToDoHomeScreen() {\n  let [tasks, setTasks] = useState(initTasks)\n  useEffect(() => {\n    async function getValue() {\n      const value = await AsyncStorage.getItem(\"@tasks\")\n      if (value === null) {\n        console.log(\"Sorting serialized version of tasks\" + JSON.stringify(tasks))\n        await AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks))\n      } else {\n        let parsedValue = JSON.parse(value)\n        console.log(\"Retrieving serialized version of tasks\")\n        console.log(parsedValue)\n        setTasks(JSON.parse(value))\n      }\n    }\n    getValue()\n  }, [])\n\n  return <Stack.Navigator initialRouteName='To Do List'>\n    <Stack.Screen name=\"Todo List\">\n      {(props) => (\n        <TodoScreen\n          {...props} tasks={tasks} setTasks={setTasks} />\n      )}\n    </Stack.Screen>\n    <Stack.Screen name=\"Details\">\n      {(props) => (\n        <DetailsScreen\n          {...props} setTasks={setTasks} tasks={tasks} />\n      )}\n    </Stack.Screen>\n  </Stack.Navigator>\n}\n\nfunction DetailsScreen({ navigation, route, setTasks, tasks }) {\n  console.log(route.params.item.relatedTasks);\n  let { description, relatedTasks } = route.params.item\n  useEffect(() => {\n    navigation.setOptions({\n      title: description === \"\" ? \"No title\" : description,\n    })\n  }, [navigation])\n\n  return (\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n      <Text>Details Screen</Text>\n      <Text>{description}</Text>\n      {\n        relatedTasks !== undefined && relatedTasks.length > 0 ?\n          <>\n            <Text>Related Tasks:</Text>\n            {tasks.filter(task => relatedTasks.includes(task.key))\n              .map(cTask => <Button key={cTask.key} title={cTask.description}\n                onPress={() => {\n                  navigation.dispatch(StackActions.push('Details', { item: cTask, setTasks, tasks, relatedTasks: cTask.relatedTasks }));\n                }}\n              />)\n            }\n          </>\n          : undefined}\n    </View>\n  )\n}\n\n\nfunction TodoScreen({ navigation, tasks, setTasks }) {\n  cacheFonts([FontAwesome.font])\n  let [input, setInput] = useState(\"\")\n  let updateTask = async (task) => {\n    console.log(task)\n    task.completed = !task.completed\n    setTasks([...tasks])\n    await AsyncStorage.setItem('@tasks', JSON.stringify(tasks))\n  }\n  let addTask = async () => {\n    let maxKey = 0\n    tasks.forEach(task => {\n      if (task.key > maxKey) {\n        maxKey = task.key\n      }\n    })\n\n    let newTasks = [\n      ...tasks,\n      {\n        description: input,\n        completed: false,\n        key: maxKey + 1,\n      },\n    ]\n\n    setTasks(newTasks)\n    console.log(newTasks)\n    await AsyncStorage.setItem('@tasks', JSON.stringify(newTasks))\n    setInput(\"\")\n  }\n\n  // new added component: removeTask\n  // working on adding confirmation alert \n  let removeTask = async (tasktoRemove) => {\n    let newTasks = tasks.filter(task => task.key !== tasktoRemove.key)\n    setTasks(newTasks)\n    console.log(newTasks)\n    await AsyncStorage.setItem('@tasks', JSON.stringify(newTasks))\n  }\n\n  let renderItem = ({ item }) => {\n    return (\n      <View style={styles.horizontal}>\n        <CheckBox\n          textStyle={item.completed ? {\n            textDecorationLine: \"line-through\",\n            textDecorationStyle: \"solid\",\n          } : undefined}\n          title={item.description}\n          checked={item.completed}\n          onPress={() => updateTask(item)}\n        />\n        <Button title=\"Details\" onPress={() => {\n          navigation.navigate(\"Details\", { item });\n          navigation.setParams({ setTasks: setTasks });\n        }} />\n        <Button title=\"Remove?\" onPress={() => removeTask(item)} />\n      </View>\n    )\n  }\n  \n\n  return (\n    <View style={[styles.container]}>\n      <StatusBar style=\"auto\" />\n      <FlatList data={tasks} renderItem={renderItem} />\n      <View style={[styles.horizontal]}>\n        <Input\n          onChangeText={setInput}\n          value={input}\n          placeholder=\"New task...\">\n        </Input>\n        <Button title=\"Add task\" onPress={addTask} />\n      </View>\n    </View>\n  )\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator>\n        <Tab.Screen\n          name=\"Home\"\n          component={ToDoHomeScreen}\n          options={{ headerShown: false }}\n        />\n      </Tab.Navigator>\n    </NavigationContainer>\n  )\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: '50%',\n    backgroundColor: '#0553',\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 30,\n  },\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}