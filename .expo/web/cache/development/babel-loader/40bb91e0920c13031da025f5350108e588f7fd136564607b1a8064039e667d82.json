{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { createContext, useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { StackActions } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Switch } from 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref7 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x4) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar initTasks = [{\n  description: \"Do homework\",\n  completed: false,\n  key: 1,\n  relatedTasks: [2]\n}, {\n  description: \"Take a shower\",\n  completed: false,\n  key: 2\n}];\nvar Stack = createNativeStackNavigator();\nvar ThemeContext = createContext(null);\nvar lightTheme = {\n  background: '#fff',\n  text: '#000'\n};\nvar darkTheme = {\n  background: '#111',\n  text: '#fff'\n};\nexport default function App() {\n  return _jsx(ThemeContext.Provider, {\n    value: lightTheme,\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Tab.Navigator, {\n        children: [_jsx(Tab.Screen, {\n          name: \"Home\",\n          component: ToDoHomeScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Tab.Screen, {\n          name: \"Settings\",\n          component: SettingsScreen\n        })]\n      })\n    })\n  });\n}\nfunction SettingsScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    darkMode = _useState2[0],\n    setDarkMode = _useState2[1];\n  var theme = darkMode ? darkTheme : lightTheme;\n  var toggleDarkMode = function toggleDarkMode() {\n    setDarkMode(!darkMode);\n  };\n  return _jsx(ThemeContext.Provider, {\n    value: theme,\n    children: _jsxs(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: theme.background\n      },\n      children: [_jsx(Text, {\n        style: {\n          color: theme.text\n        },\n        children: \"Settings Screen\"\n      }), _jsx(Text, {\n        style: {\n          color: theme.text\n        },\n        children: \"Dark Mode\"\n      }), _jsx(Switch, {\n        value: darkMode,\n        onValueChange: toggleDarkMode\n      })]\n    })\n  });\n}\nfunction ToDoHomeScreen() {\n  var _useState3 = useState(initTasks),\n    _useState4 = _slicedToArray(_useState3, 2),\n    tasks = _useState4[0],\n    setTasks = _useState4[1];\n  useEffect(function () {\n    function getValue() {\n      return _getValue.apply(this, arguments);\n    }\n    function _getValue() {\n      _getValue = _asyncToGenerator(function* () {\n        var value = yield AsyncStorage.getItem(\"@tasks\");\n        if (value === null) {\n          console.log(\"Sorting serialized version of tasks\" + JSON.stringify(tasks));\n          yield AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks));\n        } else {\n          var parsedValue = JSON.parse(value);\n          console.log(\"Retrieving serialized version of tasks\");\n          console.log(parsedValue);\n          setTasks(JSON.parse(value));\n        }\n      });\n      return _getValue.apply(this, arguments);\n    }\n    getValue();\n  }, []);\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"To Do List\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Todo List\",\n      children: function children(props) {\n        return _jsx(TodoScreen, _objectSpread(_objectSpread({}, props), {}, {\n          tasks: tasks,\n          setTasks: setTasks\n        }));\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Details\",\n      children: function children(props) {\n        return _jsx(DetailsScreen, _objectSpread(_objectSpread({}, props), {}, {\n          setTasks: setTasks,\n          tasks: tasks\n        }));\n      }\n    })]\n  });\n}\nfunction DetailsScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route,\n    setTasks = _ref.setTasks,\n    tasks = _ref.tasks;\n  var _route$params$item = route.params.item,\n    description = _route$params$item.description,\n    relatedTasks = _route$params$item.relatedTasks;\n  useEffect(function () {\n    navigation.setOptions({\n      title: description === \"\" ? \"No title\" : description\n    });\n  }, [navigation]);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Text, {\n      children: \"Details Screen\"\n    }), _jsx(Text, {\n      children: description\n    }), relatedTasks !== undefined && relatedTasks.length > 0 ? _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Related Tasks:\"\n      }), tasks.filter(function (task) {\n        return relatedTasks.includes(task.key);\n      }).map(function (cTask) {\n        return _jsx(Button, {\n          title: cTask.description,\n          onPress: function onPress() {\n            navigation.dispatch(StackActions.push('Details', {\n              item: cTask,\n              setTasks: setTasks,\n              tasks: tasks\n            }));\n          }\n        }, cTask.key);\n      })]\n    }) : undefined]\n  });\n}\nfunction TodoScreen(_ref2) {\n  var navigation = _ref2.navigation,\n    tasks = _ref2.tasks,\n    setTasks = _ref2.setTasks;\n  cacheFonts([FontAwesome.font]);\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    input = _useState6[0],\n    setInput = _useState6[1];\n  var updateTask = function () {\n    var _ref3 = _asyncToGenerator(function* (task) {\n      console.log(task);\n      task.completed = !task.completed;\n      setTasks(_toConsumableArray(tasks));\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(tasks));\n    });\n    return function updateTask(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var addTask = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var maxKey = 0;\n      tasks.forEach(function (task) {\n        if (task.key > maxKey) {\n          maxKey = task.key;\n        }\n      });\n      var newTasks = [].concat(_toConsumableArray(tasks), [{\n        description: input,\n        completed: false,\n        key: maxKey + 1\n      }]);\n      setTasks(newTasks);\n      console.log(newTasks);\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(newTasks));\n      setInput(\"\");\n    });\n    return function addTask() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var removeTask = function () {\n    var _ref5 = _asyncToGenerator(function* (taskToRemove) {\n      var newTasks = tasks.filter(function (task) {\n        return task.key !== taskToRemove.key;\n      });\n      setTasks(newTasks);\n      console.log(newTasks);\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(newTasks));\n    });\n    return function removeTask(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var renderItem = function renderItem(_ref6) {\n    var item = _ref6.item;\n    return _jsxs(View, {\n      style: styles.horizontal,\n      children: [_jsx(CheckBox, {\n        textStyle: item.completed ? {\n          textDecorationLine: \"line-through\",\n          textDecorationStyle: \"solid\"\n        } : undefined,\n        title: item.description,\n        checked: item.completed,\n        onPress: function onPress() {\n          return updateTask(item);\n        }\n      }), _jsx(Button, {\n        title: \"Details\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Details\", {\n            item: item,\n            setTasks: setTasks,\n            tasks: tasks\n          });\n        }\n      }), _jsx(Button, {\n        title: \"Remove?\",\n        onPress: function onPress() {\n          return removeTask(item);\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(FlatList, {\n      data: tasks,\n      renderItem: renderItem\n    }), _jsxs(View, {\n      style: [styles.horizontal],\n      children: [_jsx(Input, {\n        onChangeText: setInput,\n        value: input,\n        placeholder: \"New task...\"\n      }), _jsx(Button, {\n        title: \"Add task\",\n        onPress: addTask\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: '50%',\n    backgroundColor: '#0553'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 30\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","FlatList","Button","CheckBox","Input","Text","Font","FontAwesome","createContext","useEffect","useState","NavigationContainer","createNativeStackNavigator","StackActions","AsyncStorage","createBottomTabNavigator","Switch","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref7","font","loadAsync","_x4","initTasks","description","completed","key","relatedTasks","Stack","ThemeContext","lightTheme","background","text","darkTheme","App","Provider","value","children","Navigator","Screen","name","component","ToDoHomeScreen","options","headerShown","SettingsScreen","_useState","_useState2","_slicedToArray","darkMode","setDarkMode","theme","toggleDarkMode","style","flex","alignItems","justifyContent","backgroundColor","color","onValueChange","_useState3","_useState4","tasks","setTasks","getValue","_getValue","getItem","console","log","JSON","stringify","setItem","parsedValue","parse","initialRouteName","props","TodoScreen","_objectSpread","DetailsScreen","_ref","navigation","route","_route$params$item","params","item","setOptions","title","undefined","length","filter","task","includes","cTask","onPress","dispatch","push","_ref2","_useState5","_useState6","input","setInput","updateTask","_ref3","_toConsumableArray","_x2","addTask","_ref4","maxKey","forEach","newTasks","concat","removeTask","_ref5","taskToRemove","_x3","renderItem","_ref6","styles","horizontal","textStyle","textDecorationLine","textDecorationStyle","checked","navigate","container","data","onChangeText","placeholder","create","image","aspectRatio","width","flexDirection","padding","button"],"sources":["/Users/katverret/Documents/todoList/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar'\nimport { StyleSheet, View } from 'react-native'\nimport { FlatList } from \"react-native\"\nimport { Button, CheckBox, Input, Text } from '@rneui/themed'\nimport * as Font from 'expo-font'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport { createContext, useEffect, useState } from 'react'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\"\nimport { StackActions } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\nimport { Switch } from 'react-native-gesture-handler'\n\n\nconst Tab = createBottomTabNavigator()\n\nasync function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font))\n}\n\nlet initTasks = [\n  { description: \"Do homework\", completed: false, key: 1, relatedTasks: [2] },\n  { description: \"Take a shower\", completed: false, key: 2 }\n]\n\nconst Stack = createNativeStackNavigator()\n\nconst ThemeContext = createContext(null)\n\nconst lightTheme = {\n  background: '#fff',\n  text: '#000',\n};\n\nconst darkTheme = {\n  background: '#111',\n  text: '#fff',\n};\n\n\nexport default function App() {\n  return (\n    <ThemeContext.Provider value={lightTheme}>\n    <NavigationContainer>\n      <Tab.Navigator>\n        <Tab.Screen\n          name=\"Home\"\n          component={ToDoHomeScreen}\n          options={{ headerShown: false }}\n        />\n        <Tab.Screen\n          name=\"Settings\"\n          component={SettingsScreen} />\n      </Tab.Navigator>\n    </NavigationContainer>\n    </ThemeContext.Provider>\n  )\n}\n\n// added light and dark mode toggle to settingscreen\n// working on applying to all screens\nfunction SettingsScreen() {\n  const [darkMode, setDarkMode] = useState(false);\n  const theme = darkMode ? darkTheme : lightTheme;\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  }\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\", backgroundColor: theme.background }}>\n        <Text style={{ color: theme.text }}>Settings Screen</Text>\n        <Text style={{ color: theme.text }}>Dark Mode</Text>\n        <Switch value={darkMode} onValueChange={toggleDarkMode} />\n      </View>\n    </ThemeContext.Provider>\n  );\n}\n\nfunction ToDoHomeScreen() {\n  let [tasks, setTasks] = useState(initTasks)\n  useEffect(() => {\n    async function getValue() {\n      const value = await AsyncStorage.getItem(\"@tasks\")\n      if (value === null) {\n        console.log(\"Sorting serialized version of tasks\" + JSON.stringify(tasks))\n        await AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks))\n      } else {\n        let parsedValue = JSON.parse(value)\n        console.log(\"Retrieving serialized version of tasks\")\n        console.log(parsedValue)\n        setTasks(JSON.parse(value))\n      }\n    }\n    getValue()\n  }, [])\n\n  return <Stack.Navigator initialRouteName='To Do List'>\n    <Stack.Screen name=\"Todo List\">\n      {(props) => (\n        <TodoScreen\n          {...props} tasks={tasks} setTasks={setTasks} />\n      )}\n    </Stack.Screen>\n    <Stack.Screen name=\"Details\">\n      {(props) => (\n        <DetailsScreen\n          {...props} setTasks={setTasks} tasks={tasks} />\n      )}\n    </Stack.Screen>\n  </Stack.Navigator>\n}\n\nfunction DetailsScreen({ navigation, route, setTasks, tasks }) {\n  let { description, relatedTasks } = route.params.item\n  useEffect(() => {\n    navigation.setOptions({\n      title: description === \"\" ? \"No title\" : description,\n    })\n  }, [navigation])\n\n  return (\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n      <Text>Details Screen</Text>\n      <Text>{description}</Text>\n      {\n        relatedTasks !== undefined && relatedTasks.length > 0 ?\n          <>\n            <Text>Related Tasks:</Text>\n            {tasks.filter(task => relatedTasks.includes(task.key))\n              .map(cTask => <Button key={cTask.key} title={cTask.description}\n                onPress={() => {\n                  navigation.dispatch(StackActions.push('Details', { item: cTask, setTasks, tasks }));\n                }}\n              />)\n            }\n          </>\n          : undefined}\n    </View>\n  )\n}\n\nfunction TodoScreen({ navigation, tasks, setTasks }) {\n  cacheFonts([FontAwesome.font])\n  let [input, setInput] = useState(\"\")\n  let updateTask = async (task) => {\n    console.log(task)\n    task.completed = !task.completed\n    setTasks([...tasks])\n    await AsyncStorage.setItem('@tasks', JSON.stringify(tasks))\n  }\n  let addTask = async () => {\n    let maxKey = 0\n    tasks.forEach(task => {\n      if (task.key > maxKey) {\n        maxKey = task.key\n      }\n    })\n\n    let newTasks = [\n      ...tasks,\n      {\n        description: input,\n        completed: false,\n        key: maxKey + 1,\n      },\n    ]\n\n    setTasks(newTasks)\n    console.log(newTasks)\n    await AsyncStorage.setItem('@tasks', JSON.stringify(newTasks))\n    setInput(\"\")\n  }\n\n  // new added component: removeTask, just need to add confirmation alert \n  let removeTask = async (taskToRemove) => {\n    let newTasks = tasks.filter(task => task.key !== taskToRemove.key)\n    setTasks(newTasks)\n    console.log(newTasks)\n    await AsyncStorage.setItem('@tasks', JSON.stringify(newTasks))\n  }\n\n  let renderItem = ({ item }) => {\n    return (\n      <View style={styles.horizontal}>\n        <CheckBox\n          textStyle={item.completed ? {\n            textDecorationLine: \"line-through\",\n            textDecorationStyle: \"solid\",\n          } : undefined}\n          title={item.description}\n          checked={item.completed}\n          onPress={() => updateTask(item)}\n        />\n        <Button title=\"Details\" onPress={() => navigation.navigate(\"Details\", { item, setTasks, tasks })} />\n        <Button title=\"Remove?\" onPress={() => removeTask(item)} />\n      </View>\n    )\n  }\n\n  return (\n    <View style={[styles.container]}>\n      <StatusBar style=\"auto\" />\n      <FlatList data={tasks} renderItem={renderItem} />\n      <View style={[styles.horizontal]}>\n        <Input\n          onChangeText={setInput}\n          value={input}\n          placeholder=\"New task...\">\n        </Input>\n        <Button title=\"Add task\" onPress={addTask} />\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: '50%',\n    backgroundColor: '#0553',\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 30,\n  },\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}