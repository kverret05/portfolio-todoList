{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Button, CheckBox, Input } from 'react-native-elements';\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport * as Font from 'expo-font';\nimport React, { useState } from \"react\";\nimport { styles } from \"../../App\";\nimport RemoveTask from \"../components/RemoveTask\";\nimport EditTask from \"../components/EditTask\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref5 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x3) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nexport function TodoScreen(_ref) {\n  var navigation = _ref.navigation,\n    tasks = _ref.tasks,\n    setTasks = _ref.setTasks;\n  cacheFonts([FontAwesome.font]);\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    input = _useState2[0],\n    setInput = _useState2[1];\n  var updateTask = function () {\n    var _ref2 = _asyncToGenerator(function* (task) {\n      console.log(task);\n      task.completed = !task.completed;\n      setTasks(_toConsumableArray(tasks));\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(tasks));\n    });\n    return function updateTask(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var addTask = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var maxKey = 0;\n      tasks.forEach(function (task) {\n        if (task.key > maxKey) {\n          maxKey = task.key;\n        }\n      });\n      var newTasks = [].concat(_toConsumableArray(tasks), [{\n        description: input,\n        completed: false,\n        key: maxKey + 1\n      }]);\n      setTasks(newTasks);\n      console.log(newTasks);\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(newTasks));\n      setInput(\"\");\n    });\n    return function addTask() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var renderItem = function renderItem(_ref4) {\n    var item = _ref4.item;\n    return _jsxs(View, {\n      style: styles.horizontal,\n      children: [_jsx(CheckBox, {\n        textStyle: item.completed ? {\n          textDecorationLine: \"line-through\",\n          textDecorationStyle: \"solid\"\n        } : undefined,\n        title: item.description,\n        checked: item.completed,\n        onPress: function onPress() {\n          return updateTask(item);\n        }\n      }), _jsx(Button, {\n        title: \"Details\",\n        onPress: function onPress() {\n          navigation.navigate(\"Details\", {\n            item: item,\n            updateTask: updateTask\n          });\n          navigation.setOptions({\n            headerRight: function headerRight() {\n              return _jsx(EditTask, {\n                task: item,\n                tasks: tasks,\n                setTasks: setTasks\n              });\n            }\n          });\n        }\n      }), _jsx(Button, {\n        icon: _jsx(FontAwesome, {\n          name: \"trash-o\",\n          size: 24,\n          color: \"white\"\n        }),\n        onPress: function onPress() {\n          return RemoveTask(item, tasks, setTasks);\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(FlatList, {\n      data: tasks,\n      renderItem: renderItem\n    }), _jsxs(View, {\n      style: [styles.horizontal],\n      children: [_jsx(Input, {\n        onChangeText: setInput,\n        value: input,\n        placeholder: \"New task...\"\n      }), _jsx(Button, {\n        title: \"Add task\",\n        onPress: addTask\n      })]\n    })]\n  });\n}\nexport default TodoScreen;\nexport { StyleSheet };","map":{"version":3,"names":["AsyncStorage","Button","CheckBox","Input","StatusBar","StyleSheet","View","FlatList","FontAwesome","Font","React","useState","styles","RemoveTask","EditTask","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref5","font","loadAsync","_x3","TodoScreen","_ref","navigation","tasks","setTasks","_useState","_useState2","_slicedToArray","input","setInput","updateTask","_ref2","task","console","log","completed","_toConsumableArray","setItem","JSON","stringify","_x2","addTask","_ref3","maxKey","forEach","key","newTasks","concat","description","renderItem","_ref4","item","style","horizontal","children","textStyle","textDecorationLine","textDecorationStyle","undefined","title","checked","onPress","navigate","setOptions","headerRight","icon","name","size","color","container","data","onChangeText","value","placeholder"],"sources":["/Users/katverret/Documents/todoList/src/screens/ToDoScreen.js"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\"\nimport { Button, CheckBox, Input } from 'react-native-elements'\n// change @rneui/themed to react native elements!!!!!\nimport { StatusBar } from \"expo-status-bar\"\nimport { StyleSheet, View, FlatList } from 'react-native'\nimport FontAwesome from '@expo/vector-icons/FontAwesome'\nimport * as Font from 'expo-font'\nimport React, { useState } from \"react\"\nimport { styles } from \"../../App\"\n\nimport RemoveTask from \"../components/RemoveTask\"\nimport EditTask from \"../components/EditTask\"\n\n\nexport async function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font))\n}\n\nexport function TodoScreen({ navigation, tasks, setTasks }) {\n  cacheFonts([FontAwesome.font])\n  let [input, setInput] = useState(\"\")\n  let updateTask = async (task) => {\n    console.log(task)\n    task.completed = !task.completed\n    setTasks([...tasks])\n    await AsyncStorage.setItem('@tasks', JSON.stringify(tasks))\n  }\n\n  let addTask = async () => {\n    let maxKey = 0\n    tasks.forEach(task => {\n      if (task.key > maxKey) {\n        maxKey = task.key\n      }\n    })\n\n    let newTasks = [\n      ...tasks,\n      {\n        description: input,\n        completed: false,\n        key: maxKey + 1,\n      },\n    ]\n\n    setTasks(newTasks)\n    console.log(newTasks)\n    await AsyncStorage.setItem('@tasks', JSON.stringify(newTasks))\n    setInput(\"\")\n  }\n\n  let renderItem = ({ item }) => {\n    return (\n      <View style={styles.horizontal}>\n        <CheckBox\n          textStyle={item.completed ? {\n            textDecorationLine: \"line-through\",\n            textDecorationStyle: \"solid\",\n          } : undefined}\n          title={item.description}\n          checked={item.completed}\n          onPress={() => updateTask(item)}\n        />\n        <Button\n          title=\"Details\"\n          onPress={() => {\n            navigation.navigate(\"Details\", { item, updateTask });\n            navigation.setOptions({ \n              headerRight: () => (\n                <EditTask task={item} tasks={tasks} setTasks={setTasks} />\n              )\n            });\n          }} />\n        <Button\n          icon={<FontAwesome name=\"trash-o\" size={24} color=\"white\" />}\n          onPress={() => RemoveTask(item, tasks, setTasks)}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <View style={[styles.container]}>\n      <StatusBar style=\"auto\" />\n      <FlatList data={tasks} renderItem={renderItem} />\n      <View style={[styles.horizontal]}>\n        <Input\n          onChangeText={setInput}\n          value={input}\n          placeholder=\"New task...\">\n        </Input>\n        <Button title=\"Add task\" onPress={addTask} />\n      </View>\n    </View>\n  )\n}\n\nexport default TodoScreen\nexport { StyleSheet };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}