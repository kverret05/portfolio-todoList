{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Font from 'expo-font';\nimport { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport DetailsScreen from \"./src/screens/DetailsScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar taskData = [{\n  description: \"Do homework\",\n  completed: false,\n  key: 1,\n  relatedTasks: [2]\n}, {\n  description: \"Play video games\",\n  completed: false,\n  key: 2\n}];\nvar Stack = createNativeStackNavigator();\nfunction ToDoHomeScreen() {\n  var _useState = useState(taskData),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  useEffect(function () {\n    function getValue() {\n      return _getValue.apply(this, arguments);\n    }\n    function _getValue() {\n      _getValue = _asyncToGenerator(function* () {\n        var value = yield AsyncStorage.getItem(\"@tasks\");\n        if (value === null) {\n          console.log(\"Sorting serialized version of tasks\" + JSON.stringify(tasks));\n          yield AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks));\n        } else {\n          var parsedValue = JSON.parse(value);\n          console.log(\"Retrieving serialized version of tasks\");\n          console.log(parsedValue);\n          setTasks(JSON.parse(value));\n        }\n      });\n      return _getValue.apply(this, arguments);\n    }\n    getValue();\n  }, []);\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"To Do List\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Todo List\",\n      children: function children(props) {\n        return _jsx(TodoScreen, _objectSpread(_objectSpread({}, props), {}, {\n          tasks: tasks,\n          setTasks: setTasks\n        }));\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Details\",\n      children: function children(props) {\n        return _jsx(DetailsScreen, _objectSpread(_objectSpread({}, props), {}, {\n          setTasks: setTasks,\n          tasks: tasks\n        }));\n      }\n    })]\n  });\n}\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(Tab.Navigator, {\n      children: _jsx(Tab.Screen, {\n        name: \"Home\",\n        component: ToDoHomeScreen,\n        options: {\n          headerShown: false\n        }\n      })\n    })\n  });\n}\nexport var styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: '50%',\n    backgroundColor: '#0553'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 30\n  }\n});","map":{"version":3,"names":["Font","useEffect","useState","NavigationContainer","createNativeStackNavigator","AsyncStorage","createBottomTabNavigator","DetailsScreen","jsx","_jsx","jsxs","_jsxs","Tab","taskData","description","completed","key","relatedTasks","Stack","ToDoHomeScreen","_useState","_useState2","_slicedToArray","tasks","setTasks","getValue","_getValue","apply","arguments","_asyncToGenerator","value","getItem","console","log","JSON","stringify","setItem","parsedValue","parse","Navigator","initialRouteName","children","Screen","name","props","TodoScreen","_objectSpread","App","component","options","headerShown","styles","StyleSheet","create","image","flex","aspectRatio","width","backgroundColor","horizontal","flexDirection","justifyContent","padding","container","alignItems","button"],"sources":["/Users/katverret/Documents/todoList/App.js"],"sourcesContent":["import { StyleSheet} from 'react-native'\nimport * as Font from 'expo-font'\nimport { useEffect, useState } from 'react'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\nimport DetailsScreen from \"./src/screens/DetailsScreen\"\n\n\nconst Tab = createBottomTabNavigator()\n\nlet taskData = [\n  { \n    description: \"Do homework\", \n    completed: false, \n    key: 1, \n    relatedTasks: [2]\n   },\n  { \n    description: \"Play video games\", \n    completed: false, \n    key: 2 \n  },\n];\n\nconst Stack = createNativeStackNavigator()\n\n\nfunction ToDoHomeScreen() {\n  let [tasks, setTasks] = useState(taskData)\n  useEffect(() => {\n    async function getValue() {\n      const value = await AsyncStorage.getItem(\"@tasks\")\n      if (value === null) {\n        console.log(\"Sorting serialized version of tasks\" + JSON.stringify(tasks))\n        await AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks))\n      } else {\n        let parsedValue = JSON.parse(value)\n        console.log(\"Retrieving serialized version of tasks\")\n        console.log(parsedValue)\n        setTasks(JSON.parse(value))\n      }\n    }\n    getValue()\n  }, [])\n\n  return <Stack.Navigator initialRouteName='To Do List'>\n    <Stack.Screen name=\"Todo List\">\n      {(props) => (\n        <TodoScreen\n          {...props} tasks={tasks} setTasks={setTasks} />\n      )}\n    </Stack.Screen>\n    <Stack.Screen name=\"Details\">\n      {(props) => (\n        <DetailsScreen\n          {...props} setTasks={setTasks} tasks={tasks} />\n      )}\n    </Stack.Screen>\n  </Stack.Navigator>\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator>\n        <Tab.Screen\n          name=\"Home\"\n          component={ToDoHomeScreen}\n          options={{ headerShown: false }}\n        />\n      </Tab.Navigator>\n    </NavigationContainer>\n  )\n}\n\nexport const styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    aspectRatio: 1,\n    width: '50%',\n    backgroundColor: '#0553',\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10,\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 30,\n  },\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}